name: _gemm-run
on:
  workflow_call:
    inputs:
      snakemake_args:
        type: string
        required: false
        default: "-j 1 --forceall --keep-going"
    secrets:
      CI_TOKEN:
        required: false
      OPENAI_API_KEY:
        required: false

jobs:
  run:
    runs-on: [self-hosted, linux]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.CI_TOKEN || github.token }}

      - name: Cache Python virtualenv
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('requirements.txt') }}

      - name: Setup Python env
        shell: bash -l {0}
        run: |
          if [ ! -d ".venv" ]; then python3 -m venv .venv; fi
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          bash setup_mlir_aie_requirements.sh

      - name: Run Snakemake
        shell: bash -l {0}
        continue-on-error: true
        env:
          ARGS: ${{ inputs.snakemake_args }}
        run: |
          source .venv/bin/activate
          source setup_mlir_aie_path.sh
          source setup_mlir_aie_pythonpath.sh
          snakemake $ARGS || true

      - name: Upload outputs artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: outputs
          path: outputs/*
          retention-days: 30
